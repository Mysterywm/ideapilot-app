export const createGetToken = params => {
    const { cookieToken, fetcher, headerToken, sessionId } = params || {};
    return (options = {}) => {
        if (!sessionId) {
            throw new Error('getToken cannot be called without a session.');
        }
        if (options.template) {
            return fetcher(sessionId, options.template);
        }
        return Promise.resolve(headerToken || cookieToken);
    };
};
const signedOutGetToken = createGetToken({
    sessionId: undefined,
    cookieToken: undefined,
    headerToken: undefined,
    fetcher: (() => { }),
});
export const createSignedOutState = () => {
    return {
        sessionId: null,
        session: null,
        userId: null,
        user: null,
        getToken: signedOutGetToken,
    };
};
