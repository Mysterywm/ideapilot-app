"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setClerkHttpOptions = exports.setClerkApiVersion = exports.setClerkServerApiUrl = exports.setClerkApiKey = exports.Logger = exports.ClerkServerError = exports.HttpError = exports.requireAuth = exports.withAuth = exports.requireSession = exports.withSession = exports.ClerkExpressRequireAuth = exports.ClerkExpressWithAuth = exports.ClerkExpressRequireSession = exports.ClerkExpressWithSession = exports.Verification = exports.User = exports.SMSMessage = exports.PhoneNumber = exports.Invitation = exports.IdentificationLink = exports.ExternalAccount = exports.EmailAddress = exports.Email = exports.Client = exports.AllowlistIdentifier = exports.users = exports.smsMessages = exports.sessions = exports.invitations = exports.emails = exports.clients = exports.allowlistIdentifiers = void 0;
const tslib_1 = require("tslib");
const instance_1 = (0, tslib_1.__importDefault)(require("./instance"));
const singletonInstance = instance_1.default.getInstance();
const allowlistIdentifiers = singletonInstance.allowlistIdentifiers;
exports.allowlistIdentifiers = allowlistIdentifiers;
const clients = singletonInstance.clients;
exports.clients = clients;
const emails = singletonInstance.emails;
exports.emails = emails;
const invitations = singletonInstance.invitations;
exports.invitations = invitations;
const sessions = singletonInstance.sessions;
exports.sessions = sessions;
const smsMessages = singletonInstance.smsMessages;
exports.smsMessages = smsMessages;
const users = singletonInstance.users;
exports.users = users;
// Export a default singleton instance that should suffice for most use cases
exports.default = singletonInstance;
// Export resources
var instance_2 = require("./instance");
Object.defineProperty(exports, "AllowlistIdentifier", { enumerable: true, get: function () { return instance_2.AllowlistIdentifier; } });
Object.defineProperty(exports, "Client", { enumerable: true, get: function () { return instance_2.Client; } });
Object.defineProperty(exports, "Email", { enumerable: true, get: function () { return instance_2.Email; } });
Object.defineProperty(exports, "EmailAddress", { enumerable: true, get: function () { return instance_2.EmailAddress; } });
Object.defineProperty(exports, "ExternalAccount", { enumerable: true, get: function () { return instance_2.ExternalAccount; } });
Object.defineProperty(exports, "IdentificationLink", { enumerable: true, get: function () { return instance_2.IdentificationLink; } });
Object.defineProperty(exports, "Invitation", { enumerable: true, get: function () { return instance_2.Invitation; } });
Object.defineProperty(exports, "PhoneNumber", { enumerable: true, get: function () { return instance_2.PhoneNumber; } });
Object.defineProperty(exports, "SMSMessage", { enumerable: true, get: function () { return instance_2.SMSMessage; } });
Object.defineProperty(exports, "User", { enumerable: true, get: function () { return instance_2.User; } });
Object.defineProperty(exports, "Verification", { enumerable: true, get: function () { return instance_2.Verification; } });
// Export middleware functions
/** @deprecated DEPRECATED Use ClerkExpressWithAuth Est. 2.10.0 */
const ClerkExpressWithSession = singletonInstance.expressWithSession.bind(singletonInstance);
exports.ClerkExpressWithSession = ClerkExpressWithSession;
/** @deprecated DEPRECATED Use ClerkExpressRequireAuth Est. 2.10.0 */
const ClerkExpressRequireSession = singletonInstance.expressRequireSession.bind(singletonInstance);
exports.ClerkExpressRequireSession = ClerkExpressRequireSession;
/** @deprecated DEPRECATED Use withAuth Est. 2.10.0 */
const withSession = singletonInstance.withSession.bind(singletonInstance);
exports.withSession = withSession;
/** @deprecated DEPRECATED Use requireAuth Est. 2.10.0 */
const requireSession = singletonInstance.requireSession.bind(singletonInstance);
exports.requireSession = requireSession;
const ClerkExpressWithAuth = singletonInstance.expressWithSession.bind(singletonInstance);
exports.ClerkExpressWithAuth = ClerkExpressWithAuth;
const ClerkExpressRequireAuth = singletonInstance.expressRequireSession.bind(singletonInstance);
exports.ClerkExpressRequireAuth = ClerkExpressRequireAuth;
const withAuth = singletonInstance.withSession.bind(singletonInstance);
exports.withAuth = withAuth;
const requireAuth = singletonInstance.requireSession.bind(singletonInstance);
exports.requireAuth = requireAuth;
// Export Errors
var Errors_1 = require("./utils/Errors");
Object.defineProperty(exports, "HttpError", { enumerable: true, get: function () { return Errors_1.HttpError; } });
Object.defineProperty(exports, "ClerkServerError", { enumerable: true, get: function () { return Errors_1.ClerkServerError; } });
// Export Logger
var Logger_1 = require("./utils/Logger");
Object.defineProperty(exports, "Logger", { enumerable: true, get: function () { return (0, tslib_1.__importDefault)(Logger_1).default; } });
// Export setters for the default singleton instance
// Useful if you only have access to a sub-api instance
function setClerkApiKey(value) {
    instance_1.default.getInstance().apiKey = value;
}
exports.setClerkApiKey = setClerkApiKey;
function setClerkServerApiUrl(value) {
    instance_1.default.getInstance().serverApiUrl = value;
}
exports.setClerkServerApiUrl = setClerkServerApiUrl;
function setClerkApiVersion(value) {
    instance_1.default.getInstance().apiVersion = value;
}
exports.setClerkApiVersion = setClerkApiVersion;
function setClerkHttpOptions(value) {
    instance_1.default.getInstance().httpOptions = value;
}
exports.setClerkHttpOptions = setClerkHttpOptions;
//# sourceMappingURL=index.js.map